services:
  postgresql:
    image: postgres:15-alpine
    container_name: postgresql
    environment:
      POSTGRES_DB: default
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: postgresql-admin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '127.0.0.1:5011:80'
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgresql

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    ports:
      - '127.0.0.1:6379:6379'
    healthcheck:
      test: [ 'CMD', 'redis-cli', '--raw', 'incr', 'ping' ]
      interval: 10s
      timeout: 5s
      retries: 5

  web-analytics:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: web-analytics
    ports:
      - '127.0.0.1:3000:3000'
    environment:
      DATABASE_URL: postgresql://${POSTGRESQL_USER}:${POSTGRESQL_PASSWORD}@postgresql:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: ${UMAMI_APP_SECRET}
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', 'curl http://localhost:3000/api/heartbeat' ]
      interval: 5s
      timeout: 5s
      retries: 5
